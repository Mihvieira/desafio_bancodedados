use ecommerce;
show tables;
show databases;
use information_schema;
show tables;
select * from REFERENTIAL_CONSTRAINTS;

-- inserindo dados
insert into Clients (Fname, Minit, Lname, CPF, Address)
values ('Maria', 'M', 'Silva', 123467890, 'rua silva de prata 29, carangola-cidade das flores'),
		('Matheus','O', 'Pimentel', 9876543210, 'rua alemeda 289, centro-cidade das flores'),
        ('Ricardo','F', 'Silva', 456789130, 'avenida alemeda vinha 1009, centro-cidade das flores'),
        ('Julia', 'S', 'França', 789123456, 'rua larejeiras 861, centro-cidade das flores'),
        ('Roberta', 'G', 'Assis', 987456631, 'avenida koller 19, centro-cidade das flores'),
        ('Isabela', 'M', 'Cruz', 654789123, 'rua alemeda das flores, 28, centro-cidade das flores');
        
insert into product ( UnitPrice, Pname, classification_kids, category, avaliação, size) values
	(50, 'Fone de ouvido', false, 'eletrônico', '4', null),
    (250, 'Barbie Elsa', true, 'Brinquedos', '3', null),
    (50, 'Body carters', true, 'vestuário', '5', null),
    (100, 'Microfone Vedo - youtuber', false, 'eletrônico', '4', null),
    (1000, 'sofá retrátil', false, 'móveis', '3', '3x57x80'),
    (30, 'Farinha de arroz', false, 'Alimentos', '2', null),
    (200, 'Fire Stick Amazon', false, 'eletrônico', '3', null);

INSERT INTO supplier (SocialName, CNPJ, contact) values
	('Almeida e filhos', 123456655912345, '21985474000'),
    ('Eletrônicos Silva', 854519679914345, '21985484123'),
    ('Eletrônicos Valma', 934567893934695, '21975547456');
    
insert into seller (SocialName, AbstName, CNPJ, CPF, location, contact) values
	('Tech eletronics', null, 123457894563210, null, 'Rio de Janeiro', 219946287),
    ('Botique Durgas', null, null, 123456789, 'Rio de Janeiro', 219567951),
    ('Kids World', null, 123456789101215,  null, 'São Paulo', 11235789100);
    
insert into orders (idOrdersClient, ordersStatus, orderdescription, sendvalue) values
	(1,null, 'compra via aplicativo', 10),
    (2,null, 'compra via aplicativo', 50),
    (3,'confirmado', null, 10),
    (4,null, 'compra via web site', 150);

insert into productSupplier (idPsSupplier, idPsProduct, quantity) values
	(1,1,500),
    (1,2,400),
    (2,4,633),
    (3,3,5),
    (2,5,10);

insert into productStorage (storageLocation, quantity) values
	('Rio de janeiro', 1000),
    ('Rio de janeiro', 500),
    ('São Paulo', 10),
    ('São Paulo', 10),
    ('Brasília', 60);
    
insert into storageLocation (idLproduct, idLstorage, location) values
	(1,2,'RJ'),
    (2,1,'GO');

insert into productOrder (idPOproduct, idPOrder, poQuantity, poStatus) values
	(1,1,2,null),
    (2,1,1,null),
    (3,2, 1,null);


-- queries
-- recuperando todos os produtos do banco de dados
select * from product;

-- contando a quantidade de clientes cadastrados
select count(*) from clients;

-- recuperando quantos clientes fizeram pedidos
select*from clients c, orders o where c.idClient = idOrdersClient;

-- recuperando os nomes dos clientes que fizeram pedidos e o Status da ordem
select Fname, Lname, idOrders, ordersStatus from clients c, orders o where c.idClient = idOrdersClient;

-- recuperando os nomes dos clientes que fizeram pedidos e o Status da ordem
select concat(Fname, ' ', Lname) as Client, idOrders as Request, ordersStatus as Status from clients c, orders o where c.idClient = idOrdersClient;

-- inserindo novos dados
insert into orders (idOrdersClient, ordersStatus, orderdescription, sendvalue) values
	(2,default, 'compra via aplicativo', null);

-- contando os clientes associados a um pedido agrupado por ordens
select count(*) from clients c, orders o where c.idClient = idOrdersClient group by idOrders;

-- visualizando pedidos feitos por cada cliente
select * from clients c left outer join orders on idClient = idOrdersClient;


select * from clients c inner join orders o on c.idClient = o.idOrdersClient 
	inner join productOrder p on p.idPOrder = o.idOrders;

-- Recuperar quantos pedidos foram realizados por clientes?
select c.idClient, Fname, count(*) as Number_of_orders from clients c 
	inner join orders o on c.idClient = o.idOrdersClient 
	group by idClient;
    
-- recuperação de cliente com produto associado 
select c.idClient, Fname, count(*) as Number_of_orders from clients c 
	inner join orders o on c.idClient = o.idOrdersClient 
	inner join productOrder p on p.idPOrder = o.idOrders
    group by idClient;
    
-- Quais produtos foram pedidos?
select idPOProduct, Pname from productOrder, product where productOrder.idPOProduct = product.idProduct;

-- Qual o valor de cada compra?
select a.idPOProduct, b.Pname, b.UnitPrice, a.poquantity from productOrder a, product b where a.idPOProduct = b.idProduct;

	-- calculando Valor de cada produto pedido
select b.UnitPrice * a.poquantity as valor_compra from productOrder a, product b where a.idPOProduct = b.idProduct;

-- Total da compra frete + preço
select (b.UnitPrice * a.poquantity) + c.sendvalue as compra_frete from productOrder a, product b, orders c where a.idPOProduct = b.idProduct and a.idPOrder = c.idOrders;

-- algum vendedor também é fornecedor?
select s.SocialName, u.SocialName from seller s, supplier u where s.CNPJ = u.CNPJ;

-- relação de produtos, fornecedores e estoque
select p.Pname, f.SocialName, l.idLproduct from product p, supplier f, storageLocation l where p.idProduct = l.idLproduct;

-- relação de nomes dos vendedores e nomes dos produtos
select p.Pname, v.SocialName, s.idPSeller from product p, seller v, productSeller s where s.idPSeller = v.idSeller and p.IdProduct = s. idPProduct;

-- Produtos com valores maiores que 100
select UnitPrice, Pname from product where unitPrice>100;

-- organizando nomes de clientes pelo primeiro nome
select Fname, LName from clients order by fname;

-- utilizando having
select c.idClient, Fname, count(*) as Number_of_orders from clients c 
	inner join orders o on c.idClient = o.idOrdersClient 
	inner join productOrder p on p.idPOrder = o.idOrders
    group by idClient having Number_of_orders >= 2;
